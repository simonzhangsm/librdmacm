Bottom: 8c7c0f258e9ed4d76f3697dce95671e55d01c471
Top:    1253e6f1a07a47539c61638099b373c07c4b5a9f
Author: Sean Hefty <sean.hefty@intel.com>
Date:   2013-06-10 12:33:20 -0700

rsockets: Add ability to set the IB route directly

Add an RDMA specific rsocket option that allows the user
to program the RDMA route directly.  This is useful
for apps that have path record data available, either
through the ibacm or SSA, and is needed by SSA itself
to connect over rsockets.

Signed-off-by: Sean Hefty <sean.hefty@intel.com>


---

diff --git a/include/rdma/rsocket.h b/include/rdma/rsocket.h
index f220c13..efd0db5 100644
--- a/include/rdma/rsocket.h
+++ b/include/rdma/rsocket.h
@@ -78,7 +78,8 @@ enum {
 	RDMA_SQSIZE,
 	RDMA_RQSIZE,
 	RDMA_INLINE,
-	RDMA_IOMAPSIZE
+	RDMA_IOMAPSIZE,
+	RDMA_ROUTE
 };
 
 int rsetsockopt(int socket, int level, int optname,
diff --git a/src/rsocket.c b/src/rsocket.c
index 6339c47..1851b3c 100644
--- a/src/rsocket.c
+++ b/src/rsocket.c
@@ -329,6 +329,8 @@ struct rsocket {
 	long		  fd_flags;
 	uint64_t	  so_opts;
 	uint64_t	  ipv6_opts;
+	void		  *optval;
+	size_t		  optlen;
 	int		  state;
 	int		  cq_armed;
 	int		  retries;
@@ -1243,7 +1245,15 @@ resolve_addr:
 		rs->retries = 0;
 resolve_route:
 		to = 1000 << rs->retries++;
-		ret = rdma_resolve_route(rs->cm_id, to);
+		if (rs->optval) {
+			ret = rdma_set_option(rs->cm_id,  RDMA_OPTION_IB,
+					      RDMA_OPTION_IB_PATH, rs->optval,
+					      rs->optlen);
+			free(rs->optval);
+			rs->optval = 0;
+		} else {
+			ret = rdma_resolve_route(rs->cm_id, to);
+		}
 		if (!ret)
 			goto do_connect;
 		if (errno == EAGAIN || errno == EWOULDBLOCK)
@@ -3312,6 +3322,14 @@ int rsetsockopt(int socket, int level, int optname,
 			rs->target_iomap_size = (uint16_t) rs_scale_to_value(
 				(uint8_t) rs_value_to_scale(*(int *) optval, 8), 8);
 			break;
+		case RDMA_ROUTE:
+			if ((rs->optval = calloc(optlen, 1))) {
+				memcpy(rs->optval, optval, optlen);
+				rs->optlen = optlen;
+			} else {
+				ret = ERR(ENOMEM);
+			}
+			break;
 		default:
 			break;
 		}
