Bottom: e59c7d297d75ab32441e4182b0c9e524692ce2c2
Top:    4c27f2fafdbf639907561a0f2e280180a695a880
Author: Sean Hefty <sean.hefty@intel.com>
Date:   2012-05-21 17:00:06 -0700

Refresh of dbg

---

diff --git a/src/rsocket.c b/src/rsocket.c
index 388cf90..0195866 100644
--- a/src/rsocket.c
+++ b/src/rsocket.c
@@ -578,6 +578,7 @@ static int rs_do_connect(struct rsocket *rs)
 	case rs_init:
 	case rs_bound:
 resolve_addr:
+printf("rs_do_connect - resolve addr\n");
 		to = 1000 << rs->retries++;
 		ret = rdma_resolve_addr(rs->cm_id, NULL,
 					&rs->cm_id->route.addr.dst_addr, to);
@@ -587,6 +588,7 @@ resolve_addr:
 			rs->state = rs_resolving_addr;
 		break;
 	case rs_resolving_addr:
+printf("rs_do_connect - complete resolve addr\n");
 		ret = ucma_complete(rs->cm_id);
 		if (ret) {
 			if (errno == ETIMEDOUT && rs->retries <= RS_CONN_RETRIES)
@@ -597,6 +599,7 @@ resolve_addr:
 		rs->retries = 0;
 resolve_route:
 		to = 1000 << rs->retries++;
+printf("rs_do_connect - resolve route\n");
 		ret = rdma_resolve_route(rs->cm_id, to);
 		if (!ret)
 			goto do_connect;
@@ -604,6 +607,7 @@ resolve_route:
 			rs->state = rs_resolving_route;
 		break;
 	case rs_resolving_route:
+printf("rs_do_connect - complete resolve route\n");
 		ret = ucma_complete(rs->cm_id);
 		if (ret) {
 			if (errno == ETIMEDOUT && rs->retries <= RS_CONN_RETRIES)
@@ -611,6 +615,7 @@ resolve_route:
 			break;
 		}
 do_connect:
+printf("rs_do_connect - create ep\n");
 		ret = rs_create_ep(rs);
 		if (ret)
 			break;
@@ -622,6 +627,7 @@ do_connect:
 		param.rnr_retry_count = 7;
 		rs->retries = 0;
 
+printf("rs_do_connect - connect\n");
 		ret = rdma_connect(rs->cm_id, &param);
 		if (!ret)
 			goto connected;
@@ -629,6 +635,7 @@ do_connect:
 			rs->state = rs_connecting;
 		break;
 	case rs_connecting:
+printf("rs_do_connect - complete connect\n");
 		ret = ucma_complete(rs->cm_id);
 		if (ret)
 			break;
