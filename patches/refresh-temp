Bottom: 7789841c5305f1e6ee8dd914ee3e43bfffbb7ba3
Top:    46a41435ac366ad36c28dcab41598bb149a98d57
Author: Sean Hefty <sean.hefty@intel.com>
Date:   2012-05-21 18:42:39 -0700

Refresh of rs-opt-qpsize

---

diff --git a/src/cma.h b/src/cma.h
index 669b681..fc97ad5 100644
--- a/src/cma.h
+++ b/src/cma.h
@@ -67,6 +67,7 @@ static inline uint64_t htonll(uint64_t x) { return x; }
 static inline uint64_t ntohll(uint64_t x) { return x; }
 #endif
 
+#define max(a, b) ((a) > (b) ? a : b)
 #define min(a, b) ((a) < (b) ? a : b)
 
 /*
diff --git a/src/rsocket.c b/src/rsocket.c
index 893cc57..a03cb43 100644
--- a/src/rsocket.c
+++ b/src/rsocket.c
@@ -268,8 +268,15 @@ static void rs_set_qp_size(struct rsocket *rs)
 
 	if (rs->sq_size > max_size)
 		rs->sq_size = max_size;
+	else if (rs->sq_size < 2)
+		rs->sq_size = 2;
+	if (rs->sq_size <= (RS_QP_CTRL_SIZE << 2))
+		rs->ctrl_avail = 1;
+
 	if (rs->rq_size > max_size)
 		rs->rq_size = max_size;
+	else if (rs->rq_size < 2)
+		rs->rq_size = 2;
 }
 
 static int rs_init_bufs(struct rsocket *rs)
@@ -1696,15 +1703,16 @@ int rsetsockopt(int socket, int level, int optname,
 		break;
 	case SOL_RDMA:
 		if (rs->state != rs_init && rs->state != rs_bound) {
+			ret = ERR(EINVAL);
+			break;
+		}
 
 		switch (optname) {
 		case RDMA_SQSIZE:
-			*((int *) optval) = rs->sq_size;
-			*optlen = sizeof(int);
+			rs->sq_size = min((*(uint32_t *) optval), RS_QP_MAX_SIZE);
 			break;
 		case RDMA_RQSIZE:
-			*((int *) optval) = rs->rq_size;
-			*optlen = sizeof(int);
+			rs->rq_size = min((*(uint32_t *) optval), RS_QP_MAX_SIZE);
 			break;
 		default:
 			break;
@@ -1714,7 +1722,7 @@ int rsetsockopt(int socket, int level, int optname,
 		break;
 	}
 
-	if (!ret) {
+	if (!ret && opts) {
 		if (opt_on)
 			*opts |= (1 << optname);
 		else
