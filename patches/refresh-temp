Bottom: 5623cf863fc9cc2ced3b180c705ed739b95978f8
Top:    ed2f9afb0d122614fb6b76d78e385a49be99b24f
Author: Sean Hefty <sean.hefty@intel.com>
Date:   2012-08-08 10:27:51 -0700

Refresh of dbg-out

---

diff --git a/src/preload.c b/src/preload.c
index 458362d..939325a 100644
--- a/src/preload.c
+++ b/src/preload.c
@@ -660,7 +660,8 @@ ssize_t read(int socket, void *buf, size_t count)
 {
 	int fd;
 	init_preload();
-	fprintf(fout, "%d read %d read fd %d\n", syscall(SYS_gettid), socket, fd_getd(socket));
+	fprintf(fout, "%d read %d real fd %d type %d\n",
+		syscall(SYS_gettid), socket, fd_getd(socket), fd_gett(socket));
 	fflush(fout);
 	return (fd_fork_get(socket, &fd) == fd_rsocket) ?
 		rread(fd, buf, count) : real.read(fd, buf, count);
@@ -854,20 +855,29 @@ int close(int socket)
 	int ret;
 
 	init_preload();
-	fprintf(fout, "%d close %d real fd %d\n", syscall(SYS_gettid), socket, fd_getd(socket));
+	fprintf(fout, "%d close %d real fd %d type %d\n",
+		syscall(SYS_gettid), socket, fd_getd(socket), fd_gett(socket));
 	fflush(fout);
 	fdi = idm_lookup(&idm, socket);
 	if (!fdi)
 		return real.close(socket);
 
 	if (fdi->dupfd != -1) {
+		fprintf(fout, "%d closing dupfd %d\n",
+			syscall(SYS_gettid), fdi->dupfd);
+		fflush(fout);
 		ret = close(fdi->dupfd);
 		if (ret)
 			return ret;
 	}
 
 	if (atomic_dec(&fdi->refcnt))
+	{
+		fprintf(fout, "%d close - still have ref %d\n",
+			syscall(SYS_gettid), atomic_get(&fdi->refcnt));
+		fflush(fout);
 		return 0;
+	}
 
 	idm_clear(&idm, socket);
 	real.close(socket);
