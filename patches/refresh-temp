Bottom: 6b67ab7929dea022d63f78b08828f18a26afca60
Top:    cb8a166a49d92dc3423d11cc9eb021147c9b424a
Author: Sean Hefty <sean.hefty@intel.com>
Date:   2012-08-31 14:57:48 -0700

Refresh of addrinfo-af-ib

---

diff --git a/src/addrinfo.c b/src/addrinfo.c
index 0582955..e7643f7 100755
--- a/src/addrinfo.c
+++ b/src/addrinfo.c
@@ -125,7 +125,7 @@ void ucma_set_sid(enum rdma_port_space ps, struct sockaddr *addr,
 	sib->sib_sid = htonll(((uint64_t) ps << 16) + ntohs(port));
 
 	if (ps)
-		sib->sib_sid_mask = htonll(RDMA_IB_IP_PORT_MASK);
+		sib->sib_sid_mask = htonll(RDMA_IB_IP_PS_MASK);
 	if (port)
 		sib->sib_sid_mask |= htonll(RDMA_IB_IP_PORT_MASK);
 }
@@ -136,6 +136,7 @@ static int ucma_convert_in6(int ps, struct sockaddr_ib **dst, socklen_t *dst_len
 	*dst = calloc(1, sizeof(struct sockaddr_ib));
 	if (!(*dst))
 		return ERR(ENOMEM);
+printf("converting ipv6 to ib\n");
 
 	(*dst)->sib_family = AF_IB;
 	(*dst)->sib_pkey = 0xFFFF;
@@ -144,6 +145,7 @@ static int ucma_convert_in6(int ps, struct sockaddr_ib **dst, socklen_t *dst_len
 		    src->sin6_addr.s6_addr32[1], src->sin6_addr.s6_addr32[2],
 		    src->sin6_addr.s6_addr32[3]);
 	ucma_set_sid(ps, (struct sockaddr *) src, *dst);
+printf("sid %llx %llx\n", (*dst)->sib_sid, (*dst)->sib_sid_mask);
 	(*dst)->sib_scope_id = src->sin6_scope_id;
 
 	*dst_len = sizeof(struct sockaddr_ib);
@@ -167,6 +169,7 @@ static int ucma_convert_to_rai(struct rdma_addrinfo *rai,
 			break;
 		}
 	}
+printf("qp type %d\n", rai->ai_qp_type);
 
 	if (hints->ai_port_space) {
 		rai->ai_port_space = hints->ai_port_space;
@@ -180,6 +183,7 @@ static int ucma_convert_to_rai(struct rdma_addrinfo *rai,
 			break;
 		}
 	}
+printf("port space %d\n", rai->ai_port_space);
 
 	if (ai->ai_flags & AI_PASSIVE) {
 		rai->ai_flags = RAI_PASSIVE;
@@ -194,8 +198,10 @@ static int ucma_convert_to_rai(struct rdma_addrinfo *rai,
 					       &rai->ai_src_len,
 					       (struct sockaddr_in6 *) ai->ai_addr,
 					       ai->ai_addrlen);
+printf("using af ib \n");
 		} else {
 			rai->ai_family = ai->ai_family;
+printf("af %d\n", rai->ai_family);
 			ret = ucma_copy_addr(&rai->ai_src_addr, &rai->ai_src_len,
 					     ai->ai_addr, ai->ai_addrlen);
 		}
