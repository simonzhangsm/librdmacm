Bottom: 8ec84e6e24d58093de94f5921ca22d6e4c566290
Top:    18cd5fab283e42099140977cad709ad19315ac7a
Author: Sean Hefty <sean.hefty@intel.com>
Date:   2012-07-16 14:20:30 -0700

Refresh of transpose

---

diff --git a/src/preload.c b/src/preload.c
index 8b9fbaf..69597e0 100644
--- a/src/preload.c
+++ b/src/preload.c
@@ -92,12 +92,10 @@ static pthread_mutex_t mut = PTHREAD_MUTEX_INITIALIZER;
 static int sq_size;
 static int rq_size;
 static int sq_inline;
-static int fork_support;
 
 enum fd_type {
 	fd_normal,
-	fd_rsocket,
-	fd_fork
+	fd_rsocket
 };
 
 struct fd_info {
@@ -209,10 +207,6 @@ void getenv_options(void)
 	var = getenv("RS_INLINE");
 	if (var)
 		sq_inline = atoi(var);
-
-	var = getenv("RDMAV_FORK_SAFE");
-	if (var)
-		fork_support = atoi(var);
 }
 
 static void init_preload(void)
@@ -400,16 +394,8 @@ int socket(int domain, int type, int protocol)
 	ret = rsocket(domain, type, protocol);
 	recursive = 0;
 	if (ret >= 0) {
-		if (fork_support) {
-			rclose(ret);
-			ret = real_socket(domain, type, protocol);
-			if (ret < 0)
-				return ret;
-			fd_store(index, ret, fd_fork);
-		} else {
-			fd_store(index, ret, fd_rsocket);
-			set_rsocket_options(ret);
-		}
+		fd_store(index, ret, fd_rsocket);
+		set_rsocket_options(ret);
 		return index;
 	}
 	fd_close(index, &ret);
@@ -464,29 +450,6 @@ int accept(int socket, struct sockaddr *addr, socklen_t *addrlen)
 	}
 }
 
-static int connect_fork(int socket, const struct sockaddr *addr, socklen_t addrlen)
-{
-	uint32_t msg;
-	int rs, fd, ret;
-
-	fd = fd_getd(socket);
-	ret = real_connect(fd, addr, addrlen);
-	if (!ret)
-		return ret;
-
-	ret = real_read(fd, &msg, sizeof msg);
-	if (ret != sizeof msg)
-		return ret;
-
-	rs = rsocket(domain, type, protocol);
-
-	real_shutdown(fd, SHUT_RDWR);
-	real_close(fd);
-
-	fd_store(socket, fd, fd_rsocket);
-	return connect(socket, addr, addrlen);
-}
-
 int connect(int socket, const struct sockaddr *addr, socklen_t addrlen)
 {
 	struct sockaddr_in *sin;
