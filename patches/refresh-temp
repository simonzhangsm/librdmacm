Bottom: 296e6cd8f1f1213e16e0d247ff92a700dc79ef41
Top:    3ff660268308f81ffa10068086e46e1eb0d84b77
Author: Sean Hefty <sean.hefty@intel.com>
Date:   2012-08-22 15:30:51 -0700

Refresh of dbg-fork

---

diff --git a/src/preload.c b/src/preload.c
index b5a67cb..fba0281 100644
--- a/src/preload.c
+++ b/src/preload.c
@@ -511,13 +511,16 @@ static void fork_active(int socket)
 
 	flags = real.fcntl(sfd, F_GETFL);
 	real.fcntl(sfd, F_SETFL, 0);
+	printf("fork_active - recv\n");
 	ret = real.recv(sfd, &msg, sizeof msg, MSG_PEEK);
+	printf("fork_active - recv %d\n", ret);
 	real.fcntl(sfd, F_SETFL, flags);
 	if ((ret != sizeof msg) || msg)
 		goto err1;
 
 	len = sizeof addr;
 	ret = real.getpeername(sfd, (struct sockaddr *) &addr, &len);
+	printf("fork_active - getpeername %d\n", ret);
 	if (ret)
 		goto err1;
 
@@ -587,20 +590,24 @@ static void fork_passive(int socket)
 
 	sem_wait(sem);
 	ret = rbind(lfd, (struct sockaddr *) &sin6, sizeof sin6);
+	printf("fork_passive bind %d\n", ret);
 	if (ret)
 		goto lclose;
 
 	ret = rlisten(lfd, 1);
+	printf("fork_passive listen %d\n", ret);
 	if (ret)
 		goto lclose;
 
 	msg = 0;
 	len = real.write(sfd, &msg, sizeof msg);
+	printf("fork_passive write %d\n", len);
 	if (len != sizeof msg)
 		goto lclose;
 	printf("fork_passive - raccept\n");
 
 	dfd = raccept(lfd, NULL, NULL);
+	printf("fork_passive accept %d\n", dfd);
 	if (dfd < 0) {
 		ret  = dfd;
 		goto lclose;
