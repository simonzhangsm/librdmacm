Bottom: caec06cc45592384f2a93faf3ca4f4571b1481ff
Top:    b29b6a4c9e9f9d59b1bcb41088f14c174140e586
Author: Sean Hefty <sean.hefty@intel.com>
Date:   2012-05-25 12:27:27 -0700

Refresh of rs-def-inline

---

diff --git a/src/rsocket.c b/src/rsocket.c
index 6bc02f7..5eec5d9 100644
--- a/src/rsocket.c
+++ b/src/rsocket.c
@@ -51,7 +51,6 @@
 #include "cma.h"
 #include "indexer.h"
 
-#define RS_INLINE 64
 #define RS_OLAP_START_SIZE 2048
 #define RS_MAX_TRANSFER 65536
 #define RS_QP_SIZE 384
@@ -109,7 +108,7 @@ struct rs_sge {
 	uint32_t length;
 };
 
-#define RS_INLINE_MIN    (sizeof(struct rs_sge))
+#define RS_MIN_INLINE    (sizeof(struct rs_sge))
 #define rs_host_is_net() (1 == htonl(1))
 #define RS_CONN_FLAG_NET 1
 
@@ -223,7 +222,7 @@ static struct rsocket *rs_alloc(struct rsocket *inherited_rs)
 		rs->ctrl_avail = inherited_rs->ctrl_avail;
 	} else {
 		rs->sbuf_size = rs->rbuf_size = RS_BUF_SIZE;
-		rs->sq_inline = RS_INLINE;
+		rs->sq_inline = RS_MIN_INLINE;
 		rs->sq_size = rs->rq_size = RS_QP_SIZE;
 		rs->ctrl_avail = RS_QP_CTRL_SIZE;
 	}
@@ -1676,8 +1675,8 @@ int rsetsockopt(int socket, int level, int optname,
 			break;
 		case RDMA_INLINE:
 			rs->sq_inline = min(*(uint32_t *) optval, RS_QP_MAX_SIZE);
-			if (rs->sq_inline < RS_INLINE_MIN)
-				rs->sq_inline = RS_INLINE_MIN;
+			if (rs->sq_inline < RS_MIN_INLINE)
+				rs->sq_inline = RS_MIN_INLINE;
 			break;
 		default:
 			break;
