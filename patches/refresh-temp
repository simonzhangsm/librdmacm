Bottom: c8131841c4408d2abb5c97e5b8b2c21c82f21c38
Top:    402d2d10d9903030f3741ec14be531b1501dc4c4
Author: Sean Hefty <sean.hefty@intel.com>
Date:   2013-08-22 12:02:57 -0700

Refresh of cmtime-ret

---

diff --git a/examples/cmtime.c b/examples/cmtime.c
index 7342666..ea5529e 100644
--- a/examples/cmtime.c
+++ b/examples/cmtime.c
@@ -52,6 +52,7 @@ static char *port = "7471";
 static char *dst_addr;
 static char *src_addr;
 static int timeout = 2000;
+static int retries = 2;
 
 enum step {
 	STEP_CREATE_ID,
@@ -80,6 +81,7 @@ struct node {
 	struct rdma_cm_id *id;
 	struct timeval times[STEP_CNT][2];
 	int error;
+	int retries;
 };
 
 static struct node *nodes;
@@ -373,6 +375,7 @@ static int run_client(void)
 	printf("resolving address\n");
 	start_time(STEP_RESOLVE_ADDR);
 	for (i = 0; i < connections; i++) {
+		nodes[i].retries = retries;
 		start_perf(&nodes[i], STEP_RESOLVE_ADDR);
 		ret = rdma_resolve_addr(nodes[i].id, rai->ai_src_addr,
 					rai->ai_dst_addr, timeout);
@@ -465,7 +468,7 @@ int main(int argc, char **argv)
 
 	hints.ai_port_space = RDMA_PS_TCP;
 	hints.ai_qp_type = IBV_QPT_RC;
-	while ((op = getopt(argc, argv, "s:b:c:p:t:")) != -1) {
+	while ((op = getopt(argc, argv, "s:b:c:p:r:t:")) != -1) {
 		switch (op) {
 		case 's':
 			dst_addr = optarg;
@@ -479,6 +482,9 @@ int main(int argc, char **argv)
 		case 'p':
 			port = optarg;
 			break;
+		case 'r':
+			retries = atoi(optarg);
+			break;
 		case 't':
 			timeout = atoi(optarg);
 			break;
