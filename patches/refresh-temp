Bottom: 51cdc21140cba2d70c2ae10355c2ed5354963fe1
Top:    25795c71de349a280df948e9098a56a50c76435e
Author: Sean Hefty <sean.hefty@intel.com>
Date:   2012-07-18 14:01:52 -0700

Refresh of dbg

---

diff --git a/src/rsocket.c b/src/rsocket.c
index ed125b3..003b7d8 100644
--- a/src/rsocket.c
+++ b/src/rsocket.c
@@ -602,16 +602,19 @@ int raccept(int socket, struct sockaddr *addr, socklen_t *addrlen)
 	struct rs_conn_data *creq, cresp;
 	int ret;
 
+	printf("raccept %d\n", socket);
 	rs = idm_at(&idm, socket);
 	new_rs = rs_alloc(rs);
 	if (!new_rs)
 		return ERR(ENOMEM);
 
 	ret = rdma_get_request(rs->cm_id, &new_rs->cm_id);
+	printf("raccept get request %d\n", ret);
 	if (ret)
 		goto err;
 
 	ret = rs_insert(new_rs);
+	printf("raccept insert %d\n", ret);
 	if (ret < 0)
 		goto err;
 
@@ -625,6 +628,7 @@ int raccept(int socket, struct sockaddr *addr, socklen_t *addrlen)
 		rs_set_nonblocking(new_rs, O_NONBLOCK);
 
 	ret = rs_create_ep(new_rs);
+	printf("raccept create ep %d\n", ret);
 	if (ret)
 		goto err;
 
@@ -632,6 +636,7 @@ int raccept(int socket, struct sockaddr *addr, socklen_t *addrlen)
 	param = new_rs->cm_id->event->param.conn;
 	rs_set_conn_data(new_rs, &param, &cresp);
 	ret = rdma_accept(new_rs->cm_id, &param);
+	printf("raccept rdma accept %d\n", ret);
 	if (!ret)
 		new_rs->state = rs_connect_rdwr;
 	else if (errno == EAGAIN || errno == EWOULDBLOCK)
