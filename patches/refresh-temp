Bottom: a06f8c30f5c3e2d91e8d356e1422281199aa4d70
Top:    4f2f25ebd2e4c21e3ee1f3ea094cfe52c4eb2e0b
Author: Sean Hefty <sean.hefty@intel.com>
Date:   2012-06-05 14:17:36 -0700

Refresh of rs-spin

---

diff --git a/src/cma.h b/src/cma.h
index 7cd1f04..828c6aa 100644
--- a/src/cma.h
+++ b/src/cma.h
@@ -174,6 +174,6 @@ struct ibv_path_data
 #define RDMADIR "rdma"
 #endif
 #define RDMA_CONF_DIR  SYSCONFDIR "/" RDMADIR
-#define RS_CONF_DIR RDMA_CONF_DIR "/rsockets"
+#define RS_CONF_DIR RDMA_CONF_DIR "/rsocket"
 
 #endif /* CMA_H */
diff --git a/src/rsocket.c b/src/rsocket.c
index 5776806..ee1fd6c 100644
--- a/src/rsocket.c
+++ b/src/rsocket.c
@@ -1071,7 +1071,7 @@ ssize_t rrecv(int socket, void *buf, size_t len, int flags)
 	}
 	fastlock_acquire(&rs->rlock);
 	if (!rs_have_rdata(rs)) {
-		ret = rs_process_cq(rs, rs_nonblocking(rs, flags), rs_conn_have_rdata);
+		ret = rs_get_comp(rs, rs_nonblocking(rs, flags), rs_conn_have_rdata);
 		if (ret && errno != ECONNRESET)
 			goto out;
 	}
@@ -1175,8 +1175,8 @@ ssize_t rsend(int socket, const void *buf, size_t len, int flags)
 	fastlock_acquire(&rs->slock);
 	for (left = len; left; left -= xfer_size, buf += xfer_size) {
 		if (!rs_can_send(rs)) {
-			ret = rs_process_cq(rs, rs_nonblocking(rs, flags),
-					    rs_conn_can_send);
+			ret = rs_get_comp(rs, rs_nonblocking(rs, flags),
+					  rs_conn_can_send);
 			if (ret)
 				break;
 			if (rs->state != rs_connected) {
@@ -1289,8 +1289,8 @@ static ssize_t rsendv(int socket, const struct iovec *iov, int iovcnt, int flags
 	fastlock_acquire(&rs->slock);
 	for (left = len; left; left -= xfer_size) {
 		if (!rs_can_send(rs)) {
-			ret = rs_process_cq(rs, rs_nonblocking(rs, flags),
-					    rs_conn_can_send);
+			ret = rs_get_comp(rs, rs_nonblocking(rs, flags),
+					  rs_conn_can_send);
 			if (ret)
 				break;
 			if (rs->state != rs_connected) {
